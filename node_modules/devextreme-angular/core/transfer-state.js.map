{"version":3,"file":"transfer-state.js","sourceRoot":"","sources":["transfer-state.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;GAWG;;AAEH,sCAA8D;AAC9D,0CAAmD;AACnD,iDAAmD;AACnD,yDAA2D;AAC3D,8DAAoG;AAEpG;IAOI,qCAAoB,KAAoB,EAA+B,UAAe;QAAlE,UAAK,GAAL,KAAK,CAAe;QAA+B,eAAU,GAAV,UAAU,CAAK;QAClF,IAAI,IAAI,GAAG,IAAI,CAAC;QAEhB,IAAI,CAAC,MAAM,CAAC;YACR,WAAW,EAAE;gBAAS,cAAO;qBAAP,UAAO,EAAP,qBAAO,EAAP,IAAO;oBAAP,yBAAO;;gBACzB,IAAI,GAAG,GAAG,+BAAY,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,EAC1C,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE,IAAW,CAAC,CAAC;gBAElD,IAAI,yBAAgB,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;oBACnC,IAAI,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;oBAC7C,MAAM,CAAC,MAAM,CAAC,UAAC,IAAI,EAAE,MAAM;wBACvB,IAAI,YAAY,GAAG;4BACf,IAAI,EAAE,IAAI;4BACV,MAAM,EAAE,MAAM;yBACjB,CAAC;wBACF,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE,YAAmB,CAAC,CAAC;oBAC7C,CAAC,CAAC,CAAC;oBACH,OAAO,MAAM,CAAC;iBACjB;qBAAM;oBACH,IAAI,UAAU,EAAE;wBACZ,IAAI,CAAC,GAAG,IAAI,QAAQ,CAAC,QAAQ,EAAE,CAAC;wBAChC,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,EAAE,UAAU,CAAC,MAAM,CAAC,CAAC;wBAC9C,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE,IAAW,CAAC,CAAC;wBAEjC,OAAO,CAAC,CAAC,OAAO,EAAE,CAAC;qBACtB;oBACD,OAAO,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;iBAC1C;YACL,CAAC;SACJ,CAAC,CAAC;IACP,CAAC;IAED,iDAAW,GAAX,UAAY,IAAI;QACZ,IAAI,QAAQ,GAAG,EAAE,CAAC;QAClB,KAAK,IAAI,GAAG,IAAI,IAAI,EAAE;YAClB,IAAI,OAAO,IAAI,CAAC,GAAG,CAAC,KAAK,QAAQ,EAAE;gBAC/B,IAAI,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;gBACzC,QAAQ,IAAI,GAAG,GAAG,MAAM,CAAC;aAC5B;iBAAM;gBACH,QAAQ,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;aAC/B;SACJ;QAED,OAAO,QAAQ,CAAC;IACpB,CAAC;;gBAnDJ,eAAQ,SAAC;oBACR,OAAO,EAAE;wBACP,6CAA0B;qBAC3B;iBACF;;;;gBANQ,gCAAa;gDASyB,aAAM,SAAC,kBAAW;;IA6ChE,kCAAC;CAAA,AApDF,IAoDE;AA9CW,kEAA2B","sourcesContent":["/*!\n * devextreme-angular\n * Version: 19.2.3\n * Build date: Tue Oct 22 2019\n *\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-angular\n */\n\nimport { PLATFORM_ID, Inject, NgModule } from '@angular/core';\r\nimport { isPlatformServer } from '@angular/common';\r\nimport * as ajax from 'devextreme/core/utils/ajax';\r\nimport * as deferred from 'devextreme/core/utils/deferred';\r\nimport { TransferState, makeStateKey, BrowserTransferStateModule } from '@angular/platform-browser';\r\n\r\n@NgModule({\r\n  imports: [\r\n    BrowserTransferStateModule\r\n  ]\r\n})\r\n\r\nexport class DxServerTransferStateModule {\r\n    constructor(private state: TransferState, @Inject(PLATFORM_ID) private platformId: any) {\r\n        let that = this;\r\n\r\n        ajax.inject({\r\n            sendRequest: function(...args) {\r\n                let key = makeStateKey(that.generateKey(args)),\r\n                    cachedData = that.state.get(key, null as any);\r\n\r\n                if (isPlatformServer(that.platformId)) {\r\n                    let result = this.callBase.apply(this, args);\r\n                    result.always((data, status) => {\r\n                        let dataForCache = {\r\n                            data: data,\r\n                            status: status\r\n                        };\r\n                        that.state.set(key, dataForCache as any);\r\n                    });\r\n                    return result;\r\n                } else {\r\n                    if (cachedData) {\r\n                        let d = new deferred.Deferred();\r\n                        d.resolve(cachedData.data, cachedData.status);\r\n                        that.state.set(key, null as any);\r\n\r\n                        return d.promise();\r\n                    }\r\n                    return this.callBase.apply(this, args);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    generateKey(args) {\r\n        let keyValue = '';\r\n        for (let key in args) {\r\n            if (typeof args[key] === 'object') {\r\n                let objKey = this.generateKey(args[key]);\r\n                keyValue += key + objKey;\r\n            } else {\r\n                keyValue += key + args[key];\r\n            }\r\n        }\r\n\r\n        return keyValue;\r\n    }\r\n }\r\n"]}