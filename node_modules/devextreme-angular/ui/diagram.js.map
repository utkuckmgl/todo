{"version":3,"file":"diagram.js","sourceRoot":"","sources":["diagram.ts"],"names":[],"mappings":"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","sourcesContent":["/*!\n * devextreme-angular\n * Version: 19.2.3\n * Build date: Tue Oct 22 2019\n *\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-angular\n */\n\n/* tslint:disable:max-line-length */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport { BrowserTransferStateModule } from '@angular/platform-browser';\r\nimport { TransferState } from '@angular/platform-browser';\r\n\r\nimport {\r\n    Component,\r\n    NgModule,\r\n    ElementRef,\r\n    NgZone,\r\n    PLATFORM_ID,\r\n    Inject,\r\n\r\n    Input,\r\n    Output,\r\n    OnDestroy,\r\n    EventEmitter,\r\n    OnChanges,\r\n    DoCheck,\r\n    SimpleChanges,\r\n    ContentChildren,\r\n    QueryList\r\n} from '@angular/core';\r\n\r\n\r\nimport DevExpress from 'devextreme/bundles/dx.all';\r\n\r\nimport DxDiagram from 'devextreme/ui/diagram';\r\n\r\n\r\nimport { DxComponent } from '../core/component';\r\nimport { DxTemplateHost } from '../core/template-host';\r\nimport { DxIntegrationModule } from '../core/integration';\r\nimport { DxTemplateModule } from '../core/template';\r\nimport { NestedOptionHost } from '../core/nested-option';\r\nimport { WatcherHelper } from '../core/watcher-helper';\r\nimport { IterableDifferHelper } from '../core/iterable-differ-helper';\r\n\r\nimport { DxoContextMenuModule } from './nested/context-menu';\r\nimport { DxiCustomShapeModule } from './nested/custom-shape-dxi';\r\nimport { DxiConnectionPointModule } from './nested/connection-point-dxi';\r\nimport { DxoEdgesModule } from './nested/edges';\r\nimport { DxoExportModule } from './nested/export';\r\nimport { DxoGridSizeModule } from './nested/grid-size';\r\nimport { DxoNodesModule } from './nested/nodes';\r\nimport { DxoAutoLayoutModule } from './nested/auto-layout';\r\nimport { DxoPageSizeModule } from './nested/page-size';\r\nimport { DxiItemModule } from './nested/item-dxi';\r\nimport { DxoPropertiesPanelModule } from './nested/properties-panel';\r\nimport { DxiGroupModule } from './nested/group-dxi';\r\nimport { DxoToolbarModule } from './nested/toolbar';\r\nimport { DxoToolboxModule } from './nested/toolbox';\r\nimport { DxoZoomLevelModule } from './nested/zoom-level';\r\n\r\nimport { DxiCustomShapeComponent } from './nested/custom-shape-dxi';\r\n\r\n\r\n\r\n\r\n/**\r\n * [tags] ctp The Diagram widget provides a visual interface to help you design new and modify existing diagrams. #include common-ctp-note with { component: \"Diagram\" }\r\n */\r\n@Component({\r\n    selector: 'dx-diagram',\r\n    template: '',\r\n    providers: [\r\n        DxTemplateHost,\r\n        WatcherHelper,\r\n        NestedOptionHost,\r\n        IterableDifferHelper\r\n    ]\r\n})\r\nexport class DxDiagramComponent extends DxComponent implements OnDestroy, OnChanges, DoCheck {\r\n    instance: DxDiagram;\r\n\r\n\r\n    /**\r\n     * Specifies the shortcut key that sets focus on the widget.\r\n     */\r\n    @Input()\r\n    get accessKey(): string {\r\n        return this._getOption('accessKey');\r\n    }\r\n    set accessKey(value: string) {\r\n        this._setOption('accessKey', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether or not the widget changes its state when interacting with a user.\r\n     */\r\n    @Input()\r\n    get activeStateEnabled(): boolean {\r\n        return this._getOption('activeStateEnabled');\r\n    }\r\n    set activeStateEnabled(value: boolean) {\r\n        this._setOption('activeStateEnabled', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether the Diagram widget automatically zooms the work area.\r\n     */\r\n    @Input()\r\n    get autoZoom(): string {\r\n        return this._getOption('autoZoom');\r\n    }\r\n    set autoZoom(value: string) {\r\n        this._setOption('autoZoom', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Configures the context menu's settings.\r\n     */\r\n    @Input()\r\n    get contextMenu(): { commands?: Array<string>, enabled?: boolean } {\r\n        return this._getOption('contextMenu');\r\n    }\r\n    set contextMenu(value: { commands?: Array<string>, enabled?: boolean }) {\r\n        this._setOption('contextMenu', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Provide access to an array of custom shapes.\r\n     */\r\n    @Input()\r\n    get customShapes(): Array<any | { allowEditImage?: boolean, allowEditText?: boolean, backgroundImageHeight?: number, backgroundImageLeft?: number, backgroundImageTop?: number, backgroundImageUrl?: string, backgroundImageWidth?: number, baseType?: string, category?: string, connectionPoints?: Array<any | { x?: number, y?: number }>, defaultHeight?: number, defaultImageUrl?: string, defaultText?: string, defaultWidth?: number, imageHeight?: number, imageLeft?: number, imageTop?: number, imageWidth?: number, textHeight?: number, textLeft?: number, textTop?: number, textWidth?: number, title?: string, type?: string }> {\r\n        return this._getOption('customShapes');\r\n    }\r\n    set customShapes(value: Array<any | { allowEditImage?: boolean, allowEditText?: boolean, backgroundImageHeight?: number, backgroundImageLeft?: number, backgroundImageTop?: number, backgroundImageUrl?: string, backgroundImageWidth?: number, baseType?: string, category?: string, connectionPoints?: Array<any | { x?: number, y?: number }>, defaultHeight?: number, defaultImageUrl?: string, defaultText?: string, defaultWidth?: number, imageHeight?: number, imageLeft?: number, imageTop?: number, imageWidth?: number, textHeight?: number, textLeft?: number, textTop?: number, textWidth?: number, title?: string, type?: string }>) {\r\n        this._setOption('customShapes', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether the widget responds to user interaction.\r\n     */\r\n    @Input()\r\n    get disabled(): boolean {\r\n        return this._getOption('disabled');\r\n    }\r\n    set disabled(value: boolean) {\r\n        this._setOption('disabled', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Allows you to bind the collection of diagram edges to a data source.\r\n     */\r\n    @Input()\r\n    get edges(): { dataSource?: DevExpress.data.DataSource | DevExpress.data.DataSourceOptions | Array<any>, fromExpr?: Function | string, fromLineEndExpr?: Function | string, fromPointIndexExpr?: Function | string, keyExpr?: Function | string, lineTypeExpr?: Function | string, lockedExpr?: Function | string, pointsExpr?: Function | string, styleExpr?: Function | string, textExpr?: Function | string, textStyleExpr?: Function | string, toExpr?: Function | string, toLineEndExpr?: Function | string, toPointIndexExpr?: Function | string, zIndexExpr?: Function | string } {\r\n        return this._getOption('edges');\r\n    }\r\n    set edges(value: { dataSource?: DevExpress.data.DataSource | DevExpress.data.DataSourceOptions | Array<any>, fromExpr?: Function | string, fromLineEndExpr?: Function | string, fromPointIndexExpr?: Function | string, keyExpr?: Function | string, lineTypeExpr?: Function | string, lockedExpr?: Function | string, pointsExpr?: Function | string, styleExpr?: Function | string, textExpr?: Function | string, textStyleExpr?: Function | string, toExpr?: Function | string, toLineEndExpr?: Function | string, toPointIndexExpr?: Function | string, zIndexExpr?: Function | string }) {\r\n        this._setOption('edges', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the attributes to be attached to the widget's root element.\r\n     */\r\n    @Input()\r\n    get elementAttr(): any {\r\n        return this._getOption('elementAttr');\r\n    }\r\n    set elementAttr(value: any) {\r\n        this._setOption('elementAttr', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Configures export settings.\r\n     */\r\n    @Input()\r\n    get export(): { fileName?: string, proxyUrl?: string } {\r\n        return this._getOption('export');\r\n    }\r\n    set export(value: { fileName?: string, proxyUrl?: string }) {\r\n        this._setOption('export', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether the widget can be focused using keyboard navigation.\r\n     */\r\n    @Input()\r\n    get focusStateEnabled(): boolean {\r\n        return this._getOption('focusStateEnabled');\r\n    }\r\n    set focusStateEnabled(value: boolean) {\r\n        this._setOption('focusStateEnabled', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether or not to display the widget in full-screen mode.\r\n     */\r\n    @Input()\r\n    get fullScreen(): boolean {\r\n        return this._getOption('fullScreen');\r\n    }\r\n    set fullScreen(value: boolean) {\r\n        this._setOption('fullScreen', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the grid pitch.\r\n     */\r\n    @Input()\r\n    get gridSize(): number | { items?: Array<number>, value?: number } {\r\n        return this._getOption('gridSize');\r\n    }\r\n    set gridSize(value: number | { items?: Array<number>, value?: number }) {\r\n        this._setOption('gridSize', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the widget's height.\r\n     */\r\n    @Input()\r\n    get height(): number | Function | string {\r\n        return this._getOption('height');\r\n    }\r\n    set height(value: number | Function | string) {\r\n        this._setOption('height', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies text for a hint that appears when a user pauses on the widget.\r\n     */\r\n    @Input()\r\n    get hint(): string {\r\n        return this._getOption('hint');\r\n    }\r\n    set hint(value: string) {\r\n        this._setOption('hint', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether the widget changes its state when a user pauses on it.\r\n     */\r\n    @Input()\r\n    get hoverStateEnabled(): boolean {\r\n        return this._getOption('hoverStateEnabled');\r\n    }\r\n    set hoverStateEnabled(value: boolean) {\r\n        this._setOption('hoverStateEnabled', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Allows you to bind the collection of diagram nodes to a data source.\r\n     */\r\n    @Input()\r\n    get nodes(): { autoLayout?: string | { orientation?: string, type?: string }, childrenExpr?: Function | string, containerKeyExpr?: Function | string, dataSource?: DevExpress.data.DataSource | DevExpress.data.DataSourceOptions | Array<any>, heightExpr?: Function | string, imageUrlExpr?: Function | string, itemsExpr?: Function | string, keyExpr?: Function | string, leftExpr?: Function | string, lockedExpr?: Function | string, parentKeyExpr?: Function | string, styleExpr?: Function | string, textExpr?: Function | string, textStyleExpr?: Function | string, topExpr?: Function | string, typeExpr?: Function | string, widthExpr?: Function | string, zIndexExpr?: Function | string } {\r\n        return this._getOption('nodes');\r\n    }\r\n    set nodes(value: { autoLayout?: string | { orientation?: string, type?: string }, childrenExpr?: Function | string, containerKeyExpr?: Function | string, dataSource?: DevExpress.data.DataSource | DevExpress.data.DataSourceOptions | Array<any>, heightExpr?: Function | string, imageUrlExpr?: Function | string, itemsExpr?: Function | string, keyExpr?: Function | string, leftExpr?: Function | string, lockedExpr?: Function | string, parentKeyExpr?: Function | string, styleExpr?: Function | string, textExpr?: Function | string, textStyleExpr?: Function | string, topExpr?: Function | string, typeExpr?: Function | string, widthExpr?: Function | string, zIndexExpr?: Function | string }) {\r\n        this._setOption('nodes', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the color of a diagram page.\r\n     */\r\n    @Input()\r\n    get pageColor(): string {\r\n        return this._getOption('pageColor');\r\n    }\r\n    set pageColor(value: string) {\r\n        this._setOption('pageColor', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the page orientation.\r\n     */\r\n    @Input()\r\n    get pageOrientation(): string {\r\n        return this._getOption('pageOrientation');\r\n    }\r\n    set pageOrientation(value: string) {\r\n        this._setOption('pageOrientation', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies a size of pages.\r\n     */\r\n    @Input()\r\n    get pageSize(): { height?: number, items?: Array<any | { height?: number, text?: string, width?: number }>, width?: number } {\r\n        return this._getOption('pageSize');\r\n    }\r\n    set pageSize(value: { height?: number, items?: Array<any | { height?: number, text?: string, width?: number }>, width?: number }) {\r\n        this._setOption('pageSize', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Provides access to Properties panel settings.\r\n     */\r\n    @Input()\r\n    get propertiesPanel(): { collapsible?: boolean, enabled?: boolean, groups?: Array<any | { commands?: Array<string> }> } {\r\n        return this._getOption('propertiesPanel');\r\n    }\r\n    set propertiesPanel(value: { collapsible?: boolean, enabled?: boolean, groups?: Array<any | { commands?: Array<string> }> }) {\r\n        this._setOption('propertiesPanel', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether the diagram is read-only.\r\n     */\r\n    @Input()\r\n    get readOnly(): boolean {\r\n        return this._getOption('readOnly');\r\n    }\r\n    set readOnly(value: boolean) {\r\n        this._setOption('readOnly', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Switches the widget to a right-to-left representation.\r\n     */\r\n    @Input()\r\n    get rtlEnabled(): boolean {\r\n        return this._getOption('rtlEnabled');\r\n    }\r\n    set rtlEnabled(value: boolean) {\r\n        this._setOption('rtlEnabled', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether grid lines are visible.\r\n     */\r\n    @Input()\r\n    get showGrid(): boolean {\r\n        return this._getOption('showGrid');\r\n    }\r\n    set showGrid(value: boolean) {\r\n        this._setOption('showGrid', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Switch the Diagram widget to simple view mode.\r\n     */\r\n    @Input()\r\n    get simpleView(): boolean {\r\n        return this._getOption('simpleView');\r\n    }\r\n    set simpleView(value: boolean) {\r\n        this._setOption('simpleView', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether diagram elements should snap to grid lines.\r\n     */\r\n    @Input()\r\n    get snapToGrid(): boolean {\r\n        return this._getOption('snapToGrid');\r\n    }\r\n    set snapToGrid(value: boolean) {\r\n        this._setOption('snapToGrid', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the number of the element when the Tab key is used for navigating.\r\n     */\r\n    @Input()\r\n    get tabIndex(): number {\r\n        return this._getOption('tabIndex');\r\n    }\r\n    set tabIndex(value: number) {\r\n        this._setOption('tabIndex', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Provides access to toolbar settings.\r\n     */\r\n    @Input()\r\n    get toolbar(): { commands?: Array<string>, visible?: boolean } {\r\n        return this._getOption('toolbar');\r\n    }\r\n    set toolbar(value: { commands?: Array<string>, visible?: boolean }) {\r\n        this._setOption('toolbar', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Provides access to toolbox settings.\r\n     */\r\n    @Input()\r\n    get toolbox(): { groups?: Array<any | string | { category?: string, displayMode?: string, expanded?: boolean, shapes?: Array<string>, title?: string }>, visible?: boolean } {\r\n        return this._getOption('toolbox');\r\n    }\r\n    set toolbox(value: { groups?: Array<any | string | { category?: string, displayMode?: string, expanded?: boolean, shapes?: Array<string>, title?: string }>, visible?: boolean }) {\r\n        this._setOption('toolbox', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the unit for measurement options (for example, defaultHeight, gridSize, leftExpr).\r\n     */\r\n    @Input()\r\n    get units(): string {\r\n        return this._getOption('units');\r\n    }\r\n    set units(value: string) {\r\n        this._setOption('units', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the measurement unit that is displayed in user interface elements.\r\n     */\r\n    @Input()\r\n    get viewUnits(): string {\r\n        return this._getOption('viewUnits');\r\n    }\r\n    set viewUnits(value: string) {\r\n        this._setOption('viewUnits', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether the widget is visible.\r\n     */\r\n    @Input()\r\n    get visible(): boolean {\r\n        return this._getOption('visible');\r\n    }\r\n    set visible(value: boolean) {\r\n        this._setOption('visible', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the widget's width.\r\n     */\r\n    @Input()\r\n    get width(): number | Function | string {\r\n        return this._getOption('width');\r\n    }\r\n    set width(value: number | Function | string) {\r\n        this._setOption('width', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the zoom level.\r\n     */\r\n    @Input()\r\n    get zoomLevel(): number | { items?: Array<number>, value?: number } {\r\n        return this._getOption('zoomLevel');\r\n    }\r\n    set zoomLevel(value: number | { items?: Array<number>, value?: number }) {\r\n        this._setOption('zoomLevel', value);\r\n    }\r\n\r\n    /**\r\n     * A function that is executed when the widget's content is ready and each time the content is changed.\r\n     */\r\n    @Output() onContentReady: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed when the diagram's data changes.\r\n     */\r\n    @Output() onDataChanged: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed before the widget is disposed of.\r\n     */\r\n    @Output() onDisposing: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function used in JavaScript frameworks to save the widget instance.\r\n     */\r\n    @Output() onInitialized: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed after a widget option is changed.\r\n     */\r\n    @Output() onOptionChanged: EventEmitter<any>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() accessKeyChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() activeStateEnabledChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() autoZoomChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() contextMenuChange: EventEmitter<{ commands?: Array<string>, enabled?: boolean }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() customShapesChange: EventEmitter<Array<any | { allowEditImage?: boolean, allowEditText?: boolean, backgroundImageHeight?: number, backgroundImageLeft?: number, backgroundImageTop?: number, backgroundImageUrl?: string, backgroundImageWidth?: number, baseType?: string, category?: string, connectionPoints?: Array<any | { x?: number, y?: number }>, defaultHeight?: number, defaultImageUrl?: string, defaultText?: string, defaultWidth?: number, imageHeight?: number, imageLeft?: number, imageTop?: number, imageWidth?: number, textHeight?: number, textLeft?: number, textTop?: number, textWidth?: number, title?: string, type?: string }>>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() disabledChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() edgesChange: EventEmitter<{ dataSource?: DevExpress.data.DataSource | DevExpress.data.DataSourceOptions | Array<any>, fromExpr?: Function | string, fromLineEndExpr?: Function | string, fromPointIndexExpr?: Function | string, keyExpr?: Function | string, lineTypeExpr?: Function | string, lockedExpr?: Function | string, pointsExpr?: Function | string, styleExpr?: Function | string, textExpr?: Function | string, textStyleExpr?: Function | string, toExpr?: Function | string, toLineEndExpr?: Function | string, toPointIndexExpr?: Function | string, zIndexExpr?: Function | string }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() elementAttrChange: EventEmitter<any>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() exportChange: EventEmitter<{ fileName?: string, proxyUrl?: string }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() focusStateEnabledChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() fullScreenChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() gridSizeChange: EventEmitter<number | { items?: Array<number>, value?: number }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() heightChange: EventEmitter<number | Function | string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() hintChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() hoverStateEnabledChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() nodesChange: EventEmitter<{ autoLayout?: string | { orientation?: string, type?: string }, childrenExpr?: Function | string, containerKeyExpr?: Function | string, dataSource?: DevExpress.data.DataSource | DevExpress.data.DataSourceOptions | Array<any>, heightExpr?: Function | string, imageUrlExpr?: Function | string, itemsExpr?: Function | string, keyExpr?: Function | string, leftExpr?: Function | string, lockedExpr?: Function | string, parentKeyExpr?: Function | string, styleExpr?: Function | string, textExpr?: Function | string, textStyleExpr?: Function | string, topExpr?: Function | string, typeExpr?: Function | string, widthExpr?: Function | string, zIndexExpr?: Function | string }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() pageColorChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() pageOrientationChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() pageSizeChange: EventEmitter<{ height?: number, items?: Array<any | { height?: number, text?: string, width?: number }>, width?: number }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() propertiesPanelChange: EventEmitter<{ collapsible?: boolean, enabled?: boolean, groups?: Array<any | { commands?: Array<string> }> }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() readOnlyChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() rtlEnabledChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() showGridChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() simpleViewChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() snapToGridChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() tabIndexChange: EventEmitter<number>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() toolbarChange: EventEmitter<{ commands?: Array<string>, visible?: boolean }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() toolboxChange: EventEmitter<{ groups?: Array<any | string | { category?: string, displayMode?: string, expanded?: boolean, shapes?: Array<string>, title?: string }>, visible?: boolean }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() unitsChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() viewUnitsChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() visibleChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() widthChange: EventEmitter<number | Function | string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() zoomLevelChange: EventEmitter<number | { items?: Array<number>, value?: number }>;\r\n\r\n\r\n\r\n\r\n    @ContentChildren(DxiCustomShapeComponent)\r\n    get customShapesChildren(): QueryList<DxiCustomShapeComponent> {\r\n        return this._getOption('customShapes');\r\n    }\r\n    set customShapesChildren(value) {\r\n        this.setChildren('customShapes', value);\r\n    }\r\n\r\n\r\n    constructor(elementRef: ElementRef, ngZone: NgZone, templateHost: DxTemplateHost,\r\n            private _watcherHelper: WatcherHelper,\r\n            private _idh: IterableDifferHelper, optionHost: NestedOptionHost,\r\n            transferState: TransferState,\r\n            @Inject(PLATFORM_ID) platformId: any) {\r\n\r\n        super(elementRef, ngZone, templateHost, _watcherHelper, transferState, platformId);\r\n\r\n        this._createEventEmitters([\r\n            { subscribe: 'contentReady', emit: 'onContentReady' },\r\n            { subscribe: 'dataChanged', emit: 'onDataChanged' },\r\n            { subscribe: 'disposing', emit: 'onDisposing' },\r\n            { subscribe: 'initialized', emit: 'onInitialized' },\r\n            { subscribe: 'optionChanged', emit: 'onOptionChanged' },\r\n            { emit: 'accessKeyChange' },\r\n            { emit: 'activeStateEnabledChange' },\r\n            { emit: 'autoZoomChange' },\r\n            { emit: 'contextMenuChange' },\r\n            { emit: 'customShapesChange' },\r\n            { emit: 'disabledChange' },\r\n            { emit: 'edgesChange' },\r\n            { emit: 'elementAttrChange' },\r\n            { emit: 'exportChange' },\r\n            { emit: 'focusStateEnabledChange' },\r\n            { emit: 'fullScreenChange' },\r\n            { emit: 'gridSizeChange' },\r\n            { emit: 'heightChange' },\r\n            { emit: 'hintChange' },\r\n            { emit: 'hoverStateEnabledChange' },\r\n            { emit: 'nodesChange' },\r\n            { emit: 'pageColorChange' },\r\n            { emit: 'pageOrientationChange' },\r\n            { emit: 'pageSizeChange' },\r\n            { emit: 'propertiesPanelChange' },\r\n            { emit: 'readOnlyChange' },\r\n            { emit: 'rtlEnabledChange' },\r\n            { emit: 'showGridChange' },\r\n            { emit: 'simpleViewChange' },\r\n            { emit: 'snapToGridChange' },\r\n            { emit: 'tabIndexChange' },\r\n            { emit: 'toolbarChange' },\r\n            { emit: 'toolboxChange' },\r\n            { emit: 'unitsChange' },\r\n            { emit: 'viewUnitsChange' },\r\n            { emit: 'visibleChange' },\r\n            { emit: 'widthChange' },\r\n            { emit: 'zoomLevelChange' }\r\n        ]);\r\n\r\n        this._idh.setHost(this);\r\n        optionHost.setHost(this);\r\n    }\r\n\r\n    protected _createInstance(element, options) {\r\n        return new DxDiagram(element, options);\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this._destroyWidget();\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        super.ngOnChanges(changes);\r\n        this.setupChanges('customShapes', changes);\r\n    }\r\n\r\n    setupChanges(prop: string, changes: SimpleChanges) {\r\n        if (!(prop in this._optionsToUpdate)) {\r\n            this._idh.setup(prop, changes);\r\n        }\r\n    }\r\n\r\n    ngDoCheck() {\r\n        this._idh.doCheck('customShapes');\r\n        this._watcherHelper.checkWatchers();\r\n        super.ngDoCheck();\r\n        super.clearChangedOptions();\r\n    }\r\n\r\n    _setOption(name: string, value: any) {\r\n        let isSetup = this._idh.setupSingle(name, value);\r\n        let isChanged = this._idh.getChanges(name, value) !== null;\r\n\r\n        if (isSetup || isChanged) {\r\n            super._setOption(name, value);\r\n        }\r\n    }\r\n\r\n}\r\n\r\n@NgModule({\r\n  imports: [\r\n    DxoContextMenuModule,\r\n    DxiCustomShapeModule,\r\n    DxiConnectionPointModule,\r\n    DxoEdgesModule,\r\n    DxoExportModule,\r\n    DxoGridSizeModule,\r\n    DxoNodesModule,\r\n    DxoAutoLayoutModule,\r\n    DxoPageSizeModule,\r\n    DxiItemModule,\r\n    DxoPropertiesPanelModule,\r\n    DxiGroupModule,\r\n    DxoToolbarModule,\r\n    DxoToolboxModule,\r\n    DxoZoomLevelModule,\r\n    DxIntegrationModule,\r\n    DxTemplateModule,\r\n    BrowserTransferStateModule\r\n  ],\r\n  declarations: [\r\n    DxDiagramComponent\r\n  ],\r\n  exports: [\r\n    DxDiagramComponent,\r\n    DxoContextMenuModule,\r\n    DxiCustomShapeModule,\r\n    DxiConnectionPointModule,\r\n    DxoEdgesModule,\r\n    DxoExportModule,\r\n    DxoGridSizeModule,\r\n    DxoNodesModule,\r\n    DxoAutoLayoutModule,\r\n    DxoPageSizeModule,\r\n    DxiItemModule,\r\n    DxoPropertiesPanelModule,\r\n    DxiGroupModule,\r\n    DxoToolbarModule,\r\n    DxoToolboxModule,\r\n    DxoZoomLevelModule,\r\n    DxTemplateModule\r\n  ]\r\n})\r\nexport class DxDiagramModule { }\r\n"]}