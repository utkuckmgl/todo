"use strict";
/*!
 * devextreme-angular
 * Version: 19.2.3
 * Build date: Tue Oct 22 2019
 *
 * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var nested_option_1 = require("../../core/nested-option");
var nested_option_2 = require("../../core/nested-option");
var DxoTasksComponent = /** @class */ (function (_super) {
    __extends(DxoTasksComponent, _super);
    function DxoTasksComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoTasksComponent.prototype, "dataSource", {
        get: function () {
            return this._getOption('dataSource');
        },
        set: function (value) {
            this._setOption('dataSource', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTasksComponent.prototype, "endExpr", {
        get: function () {
            return this._getOption('endExpr');
        },
        set: function (value) {
            this._setOption('endExpr', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTasksComponent.prototype, "keyExpr", {
        get: function () {
            return this._getOption('keyExpr');
        },
        set: function (value) {
            this._setOption('keyExpr', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTasksComponent.prototype, "parentIdExpr", {
        get: function () {
            return this._getOption('parentIdExpr');
        },
        set: function (value) {
            this._setOption('parentIdExpr', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTasksComponent.prototype, "progressExpr", {
        get: function () {
            return this._getOption('progressExpr');
        },
        set: function (value) {
            this._setOption('progressExpr', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTasksComponent.prototype, "startExpr", {
        get: function () {
            return this._getOption('startExpr');
        },
        set: function (value) {
            this._setOption('startExpr', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTasksComponent.prototype, "titleExpr", {
        get: function () {
            return this._getOption('titleExpr');
        },
        set: function (value) {
            this._setOption('titleExpr', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTasksComponent.prototype, "_optionPath", {
        get: function () {
            return 'tasks';
        },
        enumerable: true,
        configurable: true
    });
    DxoTasksComponent.decorators = [
        { type: core_1.Component, args: [{
                    selector: 'dxo-tasks',
                    template: '',
                    styles: [''],
                    providers: [nested_option_1.NestedOptionHost]
                },] },
    ];
    /** @nocollapse */
    DxoTasksComponent.ctorParameters = function () { return [
        { type: nested_option_1.NestedOptionHost, decorators: [{ type: core_1.SkipSelf }, { type: core_1.Host }] },
        { type: nested_option_1.NestedOptionHost, decorators: [{ type: core_1.Host }] }
    ]; };
    DxoTasksComponent.propDecorators = {
        dataSource: [{ type: core_1.Input }],
        endExpr: [{ type: core_1.Input }],
        keyExpr: [{ type: core_1.Input }],
        parentIdExpr: [{ type: core_1.Input }],
        progressExpr: [{ type: core_1.Input }],
        startExpr: [{ type: core_1.Input }],
        titleExpr: [{ type: core_1.Input }]
    };
    return DxoTasksComponent;
}(nested_option_2.NestedOption));
exports.DxoTasksComponent = DxoTasksComponent;
var DxoTasksModule = /** @class */ (function () {
    function DxoTasksModule() {
    }
    DxoTasksModule.decorators = [
        { type: core_1.NgModule, args: [{
                    declarations: [
                        DxoTasksComponent
                    ],
                    exports: [
                        DxoTasksComponent
                    ],
                },] },
    ];
    return DxoTasksModule;
}());
exports.DxoTasksModule = DxoTasksModule;
//# sourceMappingURL=tasks.js.map