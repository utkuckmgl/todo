{"version":3,"file":"toast.js","sourceRoot":"","sources":["toast.ts"],"names":[],"mappings":"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","sourcesContent":["/*!\n * devextreme-angular\n * Version: 19.2.3\n * Build date: Tue Oct 22 2019\n *\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-angular\n */\n\n/* tslint:disable:max-line-length */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport { BrowserTransferStateModule } from '@angular/platform-browser';\r\nimport { TransferState } from '@angular/platform-browser';\r\n\r\nimport {\r\n    Component,\r\n    NgModule,\r\n    ElementRef,\r\n    NgZone,\r\n    PLATFORM_ID,\r\n    Inject,\r\n\r\n    Input,\r\n    Output,\r\n    OnDestroy,\r\n    EventEmitter\r\n} from '@angular/core';\r\n\r\n\r\nimport DevExpress from 'devextreme/bundles/dx.all';\r\n\r\nimport DxToast from 'devextreme/ui/toast';\r\n\r\n\r\nimport { DxComponent } from '../core/component';\r\nimport { DxTemplateHost } from '../core/template-host';\r\nimport { DxIntegrationModule } from '../core/integration';\r\nimport { DxTemplateModule } from '../core/template';\r\nimport { NestedOptionHost } from '../core/nested-option';\r\nimport { WatcherHelper } from '../core/watcher-helper';\r\n\r\n\r\nimport { DxoAnimationModule } from './nested/animation';\r\nimport { DxoHideModule } from './nested/hide';\r\nimport { DxoShowModule } from './nested/show';\r\nimport { DxoPositionModule } from './nested/position';\r\nimport { DxoAtModule } from './nested/at';\r\nimport { DxoBoundaryOffsetModule } from './nested/boundary-offset';\r\nimport { DxoCollisionModule } from './nested/collision';\r\nimport { DxoMyModule } from './nested/my';\r\nimport { DxoOffsetModule } from './nested/offset';\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * The Toast is a widget that provides pop-up notifications.\r\n */\r\n@Component({\r\n    selector: 'dx-toast',\r\n    template: '',\r\n    providers: [\r\n        DxTemplateHost,\r\n        WatcherHelper,\r\n        NestedOptionHost\r\n    ]\r\n})\r\nexport class DxToastComponent extends DxComponent implements OnDestroy {\r\n    instance: DxToast;\r\n\r\n\r\n    /**\r\n     * Specifies the shortcut key that sets focus on the widget.\r\n     */\r\n    @Input()\r\n    get accessKey(): string {\r\n        return this._getOption('accessKey');\r\n    }\r\n    set accessKey(value: string) {\r\n        this._setOption('accessKey', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Configures widget visibility animations. This object contains two fields: show and hide.\r\n     */\r\n    @Input()\r\n    get animation(): { hide?: DevExpress.animationConfig, show?: DevExpress.animationConfig } {\r\n        return this._getOption('animation');\r\n    }\r\n    set animation(value: { hide?: DevExpress.animationConfig, show?: DevExpress.animationConfig }) {\r\n        this._setOption('animation', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * A Boolean value specifying whether or not the toast is closed if a user clicks it.\r\n     */\r\n    @Input()\r\n    get closeOnClick(): boolean {\r\n        return this._getOption('closeOnClick');\r\n    }\r\n    set closeOnClick(value: boolean) {\r\n        this._setOption('closeOnClick', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether to close the widget if a user clicks outside it.\r\n     */\r\n    @Input()\r\n    get closeOnOutsideClick(): boolean | Function {\r\n        return this._getOption('closeOnOutsideClick');\r\n    }\r\n    set closeOnOutsideClick(value: boolean | Function) {\r\n        this._setOption('closeOnOutsideClick', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * A Boolean value specifying whether or not the toast is closed if a user swipes it out of the screen boundaries.\r\n     */\r\n    @Input()\r\n    get closeOnSwipe(): boolean {\r\n        return this._getOption('closeOnSwipe');\r\n    }\r\n    set closeOnSwipe(value: boolean) {\r\n        this._setOption('closeOnSwipe', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies a custom template for the widget content.\r\n     */\r\n    @Input()\r\n    get contentTemplate(): any {\r\n        return this._getOption('contentTemplate');\r\n    }\r\n    set contentTemplate(value: any) {\r\n        this._setOption('contentTemplate', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether to render the widget's content when it is displayed. If false, the content is rendered immediately.\r\n     */\r\n    @Input()\r\n    get deferRendering(): boolean {\r\n        return this._getOption('deferRendering');\r\n    }\r\n    set deferRendering(value: boolean) {\r\n        this._setOption('deferRendering', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * The time span in milliseconds during which the Toast widget is visible.\r\n     */\r\n    @Input()\r\n    get displayTime(): number {\r\n        return this._getOption('displayTime');\r\n    }\r\n    set displayTime(value: number) {\r\n        this._setOption('displayTime', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the attributes to be attached to the widget's root element.\r\n     */\r\n    @Input()\r\n    get elementAttr(): any {\r\n        return this._getOption('elementAttr');\r\n    }\r\n    set elementAttr(value: any) {\r\n        this._setOption('elementAttr', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether the widget can be focused using keyboard navigation.\r\n     */\r\n    @Input()\r\n    get focusStateEnabled(): boolean {\r\n        return this._getOption('focusStateEnabled');\r\n    }\r\n    set focusStateEnabled(value: boolean) {\r\n        this._setOption('focusStateEnabled', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the widget's height in pixels.\r\n     */\r\n    @Input()\r\n    get height(): number | Function | string {\r\n        return this._getOption('height');\r\n    }\r\n    set height(value: number | Function | string) {\r\n        this._setOption('height', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies text for a hint that appears when a user pauses on the widget.\r\n     */\r\n    @Input()\r\n    get hint(): string {\r\n        return this._getOption('hint');\r\n    }\r\n    set hint(value: string) {\r\n        this._setOption('hint', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether the widget changes its state when a user pauses on it.\r\n     */\r\n    @Input()\r\n    get hoverStateEnabled(): boolean {\r\n        return this._getOption('hoverStateEnabled');\r\n    }\r\n    set hoverStateEnabled(value: boolean) {\r\n        this._setOption('hoverStateEnabled', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the maximum height the widget can reach while resizing.\r\n     */\r\n    @Input()\r\n    get maxHeight(): number | Function | string {\r\n        return this._getOption('maxHeight');\r\n    }\r\n    set maxHeight(value: number | Function | string) {\r\n        this._setOption('maxHeight', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the maximum width the widget can reach while resizing.\r\n     */\r\n    @Input()\r\n    get maxWidth(): number | Function | string {\r\n        return this._getOption('maxWidth');\r\n    }\r\n    set maxWidth(value: number | Function | string) {\r\n        this._setOption('maxWidth', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * The Toast message text.\r\n     */\r\n    @Input()\r\n    get message(): string {\r\n        return this._getOption('message');\r\n    }\r\n    set message(value: string) {\r\n        this._setOption('message', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the minimum height the widget can reach while resizing.\r\n     */\r\n    @Input()\r\n    get minHeight(): number | Function | string {\r\n        return this._getOption('minHeight');\r\n    }\r\n    set minHeight(value: number | Function | string) {\r\n        this._setOption('minHeight', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the minimum width the widget can reach while resizing.\r\n     */\r\n    @Input()\r\n    get minWidth(): number | Function | string {\r\n        return this._getOption('minWidth');\r\n    }\r\n    set minWidth(value: number | Function | string) {\r\n        this._setOption('minWidth', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Positions the widget.\r\n     */\r\n    @Input()\r\n    get position(): DevExpress.positionConfig | string {\r\n        return this._getOption('position');\r\n    }\r\n    set position(value: DevExpress.positionConfig | string) {\r\n        this._setOption('position', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Switches the widget to a right-to-left representation.\r\n     */\r\n    @Input()\r\n    get rtlEnabled(): boolean {\r\n        return this._getOption('rtlEnabled');\r\n    }\r\n    set rtlEnabled(value: boolean) {\r\n        this._setOption('rtlEnabled', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether to shade the background when the widget is active.\r\n     */\r\n    @Input()\r\n    get shading(): boolean {\r\n        return this._getOption('shading');\r\n    }\r\n    set shading(value: boolean) {\r\n        this._setOption('shading', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the shading color.\r\n     */\r\n    @Input()\r\n    get shadingColor(): string {\r\n        return this._getOption('shadingColor');\r\n    }\r\n    set shadingColor(value: string) {\r\n        this._setOption('shadingColor', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the number of the element when the Tab key is used for navigating.\r\n     */\r\n    @Input()\r\n    get tabIndex(): number {\r\n        return this._getOption('tabIndex');\r\n    }\r\n    set tabIndex(value: number) {\r\n        this._setOption('tabIndex', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the Toast widget type.\r\n     */\r\n    @Input()\r\n    get type(): string {\r\n        return this._getOption('type');\r\n    }\r\n    set type(value: string) {\r\n        this._setOption('type', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * A Boolean value specifying whether or not the widget is visible.\r\n     */\r\n    @Input()\r\n    get visible(): boolean {\r\n        return this._getOption('visible');\r\n    }\r\n    set visible(value: boolean) {\r\n        this._setOption('visible', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the widget's width in pixels.\r\n     */\r\n    @Input()\r\n    get width(): number | Function | string {\r\n        return this._getOption('width');\r\n    }\r\n    set width(value: number | Function | string) {\r\n        this._setOption('width', value);\r\n    }\r\n\r\n    /**\r\n     * A function that is executed when the widget's content is ready and each time the content is changed.\r\n     */\r\n    @Output() onContentReady: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed before the widget is disposed of.\r\n     */\r\n    @Output() onDisposing: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed after the widget is hidden.\r\n     */\r\n    @Output() onHidden: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed before the widget is hidden.\r\n     */\r\n    @Output() onHiding: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function used in JavaScript frameworks to save the widget instance.\r\n     */\r\n    @Output() onInitialized: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed after a widget option is changed.\r\n     */\r\n    @Output() onOptionChanged: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed before the widget is displayed.\r\n     */\r\n    @Output() onShowing: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed after the widget is displayed.\r\n     */\r\n    @Output() onShown: EventEmitter<any>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() accessKeyChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() animationChange: EventEmitter<{ hide?: DevExpress.animationConfig, show?: DevExpress.animationConfig }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() closeOnClickChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() closeOnOutsideClickChange: EventEmitter<boolean | Function>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() closeOnSwipeChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() contentTemplateChange: EventEmitter<any>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() deferRenderingChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() displayTimeChange: EventEmitter<number>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() elementAttrChange: EventEmitter<any>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() focusStateEnabledChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() heightChange: EventEmitter<number | Function | string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() hintChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() hoverStateEnabledChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() maxHeightChange: EventEmitter<number | Function | string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() maxWidthChange: EventEmitter<number | Function | string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() messageChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() minHeightChange: EventEmitter<number | Function | string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() minWidthChange: EventEmitter<number | Function | string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() positionChange: EventEmitter<DevExpress.positionConfig | string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() rtlEnabledChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() shadingChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() shadingColorChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() tabIndexChange: EventEmitter<number>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() typeChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() visibleChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() widthChange: EventEmitter<number | Function | string>;\r\n\r\n\r\n\r\n\r\n\r\n    constructor(elementRef: ElementRef, ngZone: NgZone, templateHost: DxTemplateHost,\r\n            _watcherHelper: WatcherHelper, optionHost: NestedOptionHost,\r\n            transferState: TransferState,\r\n            @Inject(PLATFORM_ID) platformId: any) {\r\n\r\n        super(elementRef, ngZone, templateHost, _watcherHelper, transferState, platformId);\r\n\r\n        this._createEventEmitters([\r\n            { subscribe: 'contentReady', emit: 'onContentReady' },\r\n            { subscribe: 'disposing', emit: 'onDisposing' },\r\n            { subscribe: 'hidden', emit: 'onHidden' },\r\n            { subscribe: 'hiding', emit: 'onHiding' },\r\n            { subscribe: 'initialized', emit: 'onInitialized' },\r\n            { subscribe: 'optionChanged', emit: 'onOptionChanged' },\r\n            { subscribe: 'showing', emit: 'onShowing' },\r\n            { subscribe: 'shown', emit: 'onShown' },\r\n            { emit: 'accessKeyChange' },\r\n            { emit: 'animationChange' },\r\n            { emit: 'closeOnClickChange' },\r\n            { emit: 'closeOnOutsideClickChange' },\r\n            { emit: 'closeOnSwipeChange' },\r\n            { emit: 'contentTemplateChange' },\r\n            { emit: 'deferRenderingChange' },\r\n            { emit: 'displayTimeChange' },\r\n            { emit: 'elementAttrChange' },\r\n            { emit: 'focusStateEnabledChange' },\r\n            { emit: 'heightChange' },\r\n            { emit: 'hintChange' },\r\n            { emit: 'hoverStateEnabledChange' },\r\n            { emit: 'maxHeightChange' },\r\n            { emit: 'maxWidthChange' },\r\n            { emit: 'messageChange' },\r\n            { emit: 'minHeightChange' },\r\n            { emit: 'minWidthChange' },\r\n            { emit: 'positionChange' },\r\n            { emit: 'rtlEnabledChange' },\r\n            { emit: 'shadingChange' },\r\n            { emit: 'shadingColorChange' },\r\n            { emit: 'tabIndexChange' },\r\n            { emit: 'typeChange' },\r\n            { emit: 'visibleChange' },\r\n            { emit: 'widthChange' }\r\n        ]);\r\n        optionHost.setHost(this);\r\n    }\r\n\r\n    protected _createInstance(element, options) {\r\n        return new DxToast(element, options);\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this._destroyWidget();\r\n    }\r\n\r\n\r\n}\r\n\r\n@NgModule({\r\n  imports: [\r\n    DxoAnimationModule,\r\n    DxoHideModule,\r\n    DxoShowModule,\r\n    DxoPositionModule,\r\n    DxoAtModule,\r\n    DxoBoundaryOffsetModule,\r\n    DxoCollisionModule,\r\n    DxoMyModule,\r\n    DxoOffsetModule,\r\n    DxIntegrationModule,\r\n    DxTemplateModule,\r\n    BrowserTransferStateModule\r\n  ],\r\n  declarations: [\r\n    DxToastComponent\r\n  ],\r\n  exports: [\r\n    DxToastComponent,\r\n    DxoAnimationModule,\r\n    DxoHideModule,\r\n    DxoShowModule,\r\n    DxoPositionModule,\r\n    DxoAtModule,\r\n    DxoBoundaryOffsetModule,\r\n    DxoCollisionModule,\r\n    DxoMyModule,\r\n    DxoOffsetModule,\r\n    DxTemplateModule\r\n  ]\r\n})\r\nexport class DxToastModule { }\r\n"]}