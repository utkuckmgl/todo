{"version":3,"file":"tree-map.js","sourceRoot":"","sources":["tree-map.ts"],"names":[],"mappings":"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","sourcesContent":["/*!\n * devextreme-angular\n * Version: 19.2.3\n * Build date: Tue Oct 22 2019\n *\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-angular\n */\n\n/* tslint:disable:max-line-length */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport { BrowserTransferStateModule } from '@angular/platform-browser';\r\nimport { TransferState } from '@angular/platform-browser';\r\n\r\nimport {\r\n    Component,\r\n    NgModule,\r\n    ElementRef,\r\n    NgZone,\r\n    PLATFORM_ID,\r\n    Inject,\r\n\r\n    Input,\r\n    Output,\r\n    OnDestroy,\r\n    EventEmitter,\r\n    OnChanges,\r\n    DoCheck,\r\n    SimpleChanges\r\n} from '@angular/core';\r\n\r\n\r\nimport DevExpress from 'devextreme/bundles/dx.all';\r\n\r\nimport DxTreeMap from 'devextreme/viz/tree_map';\r\n\r\n\r\nimport { DxComponent } from '../core/component';\r\nimport { DxTemplateHost } from '../core/template-host';\r\nimport { DxIntegrationModule } from '../core/integration';\r\nimport { DxTemplateModule } from '../core/template';\r\nimport { NestedOptionHost } from '../core/nested-option';\r\nimport { WatcherHelper } from '../core/watcher-helper';\r\nimport { IterableDifferHelper } from '../core/iterable-differ-helper';\r\n\r\nimport { DxoColorizerModule } from './nested/colorizer';\r\nimport { DxoExportModule } from './nested/export';\r\nimport { DxoGroupModule } from './nested/group';\r\nimport { DxoBorderModule } from './nested/border';\r\nimport { DxoHoverStyleModule } from './nested/hover-style';\r\nimport { DxoLabelModule } from './nested/label';\r\nimport { DxoFontModule } from './nested/font';\r\nimport { DxoSelectionStyleModule } from './nested/selection-style';\r\nimport { DxoLoadingIndicatorModule } from './nested/loading-indicator';\r\nimport { DxoSizeModule } from './nested/size';\r\nimport { DxoTileModule } from './nested/tile';\r\nimport { DxoTitleModule } from './nested/title';\r\nimport { DxoMarginModule } from './nested/margin';\r\nimport { DxoSubtitleModule } from './nested/subtitle';\r\nimport { DxoTooltipModule } from './nested/tooltip';\r\nimport { DxoFormatModule } from './nested/format';\r\nimport { DxoShadowModule } from './nested/shadow';\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * The TreeMap is a widget that displays hierarchical data by using nested rectangles.\r\n */\r\n@Component({\r\n    selector: 'dx-tree-map',\r\n    template: '',\r\n    styles: [ ' :host {  display: block; }'],\r\n    providers: [\r\n        DxTemplateHost,\r\n        WatcherHelper,\r\n        NestedOptionHost,\r\n        IterableDifferHelper\r\n    ]\r\n})\r\nexport class DxTreeMapComponent extends DxComponent implements OnDestroy, OnChanges, DoCheck {\r\n    instance: DxTreeMap;\r\n\r\n\r\n    /**\r\n     * Specifies the name of the data source field that provides nested items for a group. Applies to hierarchical data sources only.\r\n     */\r\n    @Input()\r\n    get childrenField(): string {\r\n        return this._getOption('childrenField');\r\n    }\r\n    set childrenField(value: string) {\r\n        this._setOption('childrenField', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the name of the data source field that provides colors for tiles.\r\n     */\r\n    @Input()\r\n    get colorField(): string {\r\n        return this._getOption('colorField');\r\n    }\r\n    set colorField(value: string) {\r\n        this._setOption('colorField', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Manages the color settings.\r\n     */\r\n    @Input()\r\n    get colorizer(): { colorCodeField?: string, colorizeGroups?: boolean, palette?: string | Array<string>, paletteExtensionMode?: string, range?: Array<number>, type?: string } {\r\n        return this._getOption('colorizer');\r\n    }\r\n    set colorizer(value: { colorCodeField?: string, colorizeGroups?: boolean, palette?: string | Array<string>, paletteExtensionMode?: string, range?: Array<number>, type?: string }) {\r\n        this._setOption('colorizer', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Binds the widget to data.\r\n     */\r\n    @Input()\r\n    get dataSource(): DevExpress.data.DataSource | DevExpress.data.DataSourceOptions | string | Array<any> {\r\n        return this._getOption('dataSource');\r\n    }\r\n    set dataSource(value: DevExpress.data.DataSource | DevExpress.data.DataSourceOptions | string | Array<any>) {\r\n        this._setOption('dataSource', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether the widget responds to the user interaction.\r\n     */\r\n    @Input()\r\n    get disabled(): boolean {\r\n        return this._getOption('disabled');\r\n    }\r\n    set disabled(value: boolean) {\r\n        this._setOption('disabled', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the attributes to be attached to the widget's root element.\r\n     */\r\n    @Input()\r\n    get elementAttr(): any {\r\n        return this._getOption('elementAttr');\r\n    }\r\n    set elementAttr(value: any) {\r\n        this._setOption('elementAttr', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Configures the exporting and printing features.\r\n     */\r\n    @Input()\r\n    get export(): { backgroundColor?: string, enabled?: boolean, fileName?: string, formats?: Array<string>, margin?: number, printingEnabled?: boolean, proxyUrl?: string, svgToCanvas?: Function } {\r\n        return this._getOption('export');\r\n    }\r\n    set export(value: { backgroundColor?: string, enabled?: boolean, fileName?: string, formats?: Array<string>, margin?: number, printingEnabled?: boolean, proxyUrl?: string, svgToCanvas?: Function }) {\r\n        this._setOption('export', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Configures groups.\r\n     */\r\n    @Input()\r\n    get group(): { border?: { color?: string, width?: number }, color?: string, headerHeight?: number, hoverEnabled?: boolean, hoverStyle?: { border?: { color?: string, width?: number }, color?: string }, label?: { font?: DevExpress.viz.Font, textOverflow?: string, visible?: boolean }, selectionStyle?: { border?: { color?: string, width?: number }, color?: string } } {\r\n        return this._getOption('group');\r\n    }\r\n    set group(value: { border?: { color?: string, width?: number }, color?: string, headerHeight?: number, hoverEnabled?: boolean, hoverStyle?: { border?: { color?: string, width?: number }, color?: string }, label?: { font?: DevExpress.viz.Font, textOverflow?: string, visible?: boolean }, selectionStyle?: { border?: { color?: string, width?: number }, color?: string } }) {\r\n        this._setOption('group', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether tiles and groups change their style when a user pauses on them.\r\n     */\r\n    @Input()\r\n    get hoverEnabled(): boolean {\r\n        return this._getOption('hoverEnabled');\r\n    }\r\n    set hoverEnabled(value: boolean) {\r\n        this._setOption('hoverEnabled', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the name of the data source field that provides IDs for items. Applies to plain data sources only.\r\n     */\r\n    @Input()\r\n    get idField(): string {\r\n        return this._getOption('idField');\r\n    }\r\n    set idField(value: string) {\r\n        this._setOption('idField', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether the user will interact with a single tile or its group.\r\n     */\r\n    @Input()\r\n    get interactWithGroup(): boolean {\r\n        return this._getOption('interactWithGroup');\r\n    }\r\n    set interactWithGroup(value: boolean) {\r\n        this._setOption('interactWithGroup', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the name of the data source field that provides texts for tile and group labels.\r\n     */\r\n    @Input()\r\n    get labelField(): string {\r\n        return this._getOption('labelField');\r\n    }\r\n    set labelField(value: string) {\r\n        this._setOption('labelField', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the layout algorithm.\r\n     */\r\n    @Input()\r\n    get layoutAlgorithm(): Function | string {\r\n        return this._getOption('layoutAlgorithm');\r\n    }\r\n    set layoutAlgorithm(value: Function | string) {\r\n        this._setOption('layoutAlgorithm', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the direction in which the items will be laid out.\r\n     */\r\n    @Input()\r\n    get layoutDirection(): string {\r\n        return this._getOption('layoutDirection');\r\n    }\r\n    set layoutDirection(value: string) {\r\n        this._setOption('layoutDirection', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Configures the loading indicator.\r\n     */\r\n    @Input()\r\n    get loadingIndicator(): { backgroundColor?: string, enabled?: boolean, font?: DevExpress.viz.Font, show?: boolean, text?: string } {\r\n        return this._getOption('loadingIndicator');\r\n    }\r\n    set loadingIndicator(value: { backgroundColor?: string, enabled?: boolean, font?: DevExpress.viz.Font, show?: boolean, text?: string }) {\r\n        this._setOption('loadingIndicator', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies how many hierarchical levels must be visualized.\r\n     */\r\n    @Input()\r\n    get maxDepth(): number {\r\n        return this._getOption('maxDepth');\r\n    }\r\n    set maxDepth(value: number) {\r\n        this._setOption('maxDepth', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the name of the data source field that provides parent IDs for items. Applies to plain data sources only.\r\n     */\r\n    @Input()\r\n    get parentField(): string {\r\n        return this._getOption('parentField');\r\n    }\r\n    set parentField(value: string) {\r\n        this._setOption('parentField', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Notifies the widget that it is embedded into an HTML page that uses a tag modifying the path.\r\n     */\r\n    @Input()\r\n    get pathModified(): boolean {\r\n        return this._getOption('pathModified');\r\n    }\r\n    set pathModified(value: boolean) {\r\n        this._setOption('pathModified', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether to redraw the widget when the size of the parent browser window changes or a mobile device rotates.\r\n     */\r\n    @Input()\r\n    get redrawOnResize(): boolean {\r\n        return this._getOption('redrawOnResize');\r\n    }\r\n    set redrawOnResize(value: boolean) {\r\n        this._setOption('redrawOnResize', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Use the tile.label.textOverflow option instead.\r\n     */\r\n    @Input()\r\n    get resolveLabelOverflow(): string {\r\n        return this._getOption('resolveLabelOverflow');\r\n    }\r\n    set resolveLabelOverflow(value: string) {\r\n        this._setOption('resolveLabelOverflow', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Switches the widget to a right-to-left representation.\r\n     */\r\n    @Input()\r\n    get rtlEnabled(): boolean {\r\n        return this._getOption('rtlEnabled');\r\n    }\r\n    set rtlEnabled(value: boolean) {\r\n        this._setOption('rtlEnabled', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether a single or multiple nodes can be in the selected state simultaneously.\r\n     */\r\n    @Input()\r\n    get selectionMode(): string {\r\n        return this._getOption('selectionMode');\r\n    }\r\n    set selectionMode(value: string) {\r\n        this._setOption('selectionMode', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the widget's size in pixels.\r\n     */\r\n    @Input()\r\n    get size(): { height?: number, width?: number } {\r\n        return this._getOption('size');\r\n    }\r\n    set size(value: { height?: number, width?: number }) {\r\n        this._setOption('size', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Sets the name of the theme the widget uses.\r\n     */\r\n    @Input()\r\n    get theme(): string {\r\n        return this._getOption('theme');\r\n    }\r\n    set theme(value: string) {\r\n        this._setOption('theme', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Configures tiles.\r\n     */\r\n    @Input()\r\n    get tile(): { border?: { color?: string, width?: number }, color?: string, hoverStyle?: { border?: { color?: string, width?: number }, color?: string }, label?: { font?: DevExpress.viz.Font, textOverflow?: string, visible?: boolean, wordWrap?: string }, selectionStyle?: { border?: { color?: string, width?: number }, color?: string } } {\r\n        return this._getOption('tile');\r\n    }\r\n    set tile(value: { border?: { color?: string, width?: number }, color?: string, hoverStyle?: { border?: { color?: string, width?: number }, color?: string }, label?: { font?: DevExpress.viz.Font, textOverflow?: string, visible?: boolean, wordWrap?: string }, selectionStyle?: { border?: { color?: string, width?: number }, color?: string } }) {\r\n        this._setOption('tile', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Configures the widget's title.\r\n     */\r\n    @Input()\r\n    get title(): string | { font?: DevExpress.viz.Font, horizontalAlignment?: string, margin?: number | { bottom?: number, left?: number, right?: number, top?: number }, placeholderSize?: number, subtitle?: string | { font?: DevExpress.viz.Font, offset?: number, text?: string, textOverflow?: string, wordWrap?: string }, text?: string, textOverflow?: string, verticalAlignment?: string, wordWrap?: string } {\r\n        return this._getOption('title');\r\n    }\r\n    set title(value: string | { font?: DevExpress.viz.Font, horizontalAlignment?: string, margin?: number | { bottom?: number, left?: number, right?: number, top?: number }, placeholderSize?: number, subtitle?: string | { font?: DevExpress.viz.Font, offset?: number, text?: string, textOverflow?: string, wordWrap?: string }, text?: string, textOverflow?: string, verticalAlignment?: string, wordWrap?: string }) {\r\n        this._setOption('title', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Configures tooltips - small pop-up rectangles that display information about a data-visualizing widget element being pressed or hovered over with the mouse pointer.\r\n     */\r\n    @Input()\r\n    get tooltip(): { arrowLength?: number, border?: { color?: string, dashStyle?: string, opacity?: number, visible?: boolean, width?: number }, color?: string, container?: Element | JQuery, contentTemplate?: any, cornerRadius?: number, customizeTooltip?: Function, enabled?: boolean, font?: DevExpress.viz.Font, format?: DevExpress.ui.format | string, opacity?: number, paddingLeftRight?: number, paddingTopBottom?: number, shadow?: { blur?: number, color?: string, offsetX?: number, offsetY?: number, opacity?: number }, zIndex?: number } {\r\n        return this._getOption('tooltip');\r\n    }\r\n    set tooltip(value: { arrowLength?: number, border?: { color?: string, dashStyle?: string, opacity?: number, visible?: boolean, width?: number }, color?: string, container?: Element | JQuery, contentTemplate?: any, cornerRadius?: number, customizeTooltip?: Function, enabled?: boolean, font?: DevExpress.viz.Font, format?: DevExpress.ui.format | string, opacity?: number, paddingLeftRight?: number, paddingTopBottom?: number, shadow?: { blur?: number, color?: string, offsetX?: number, offsetY?: number, opacity?: number }, zIndex?: number }) {\r\n        this._setOption('tooltip', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the name of the data source field that provides values for tiles.\r\n     */\r\n    @Input()\r\n    get valueField(): string {\r\n        return this._getOption('valueField');\r\n    }\r\n    set valueField(value: string) {\r\n        this._setOption('valueField', value);\r\n    }\r\n\r\n    /**\r\n     * A function that is executed when a node is clicked or tapped.\r\n     */\r\n    @Output() onClick: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed before the widget is disposed of.\r\n     */\r\n    @Output() onDisposing: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed when the widget's rendering has finished.\r\n     */\r\n    @Output() onDrawn: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed when a user drills up or down.\r\n     */\r\n    @Output() onDrill: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed after the widget is exported.\r\n     */\r\n    @Output() onExported: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed before the widget is exported.\r\n     */\r\n    @Output() onExporting: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed before a file with exported widget is saved to the user's local storage.\r\n     */\r\n    @Output() onFileSaving: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed after the pointer enters or leaves a node.\r\n     */\r\n    @Output() onHoverChanged: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed when an error or warning occurs.\r\n     */\r\n    @Output() onIncidentOccurred: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function used in JavaScript frameworks to save the widget instance.\r\n     */\r\n    @Output() onInitialized: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed only once, after the nodes are initialized.\r\n     */\r\n    @Output() onNodesInitialized: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed before the nodes are displayed and each time the collection of active nodes is changed.\r\n     */\r\n    @Output() onNodesRendering: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed after a widget option is changed.\r\n     */\r\n    @Output() onOptionChanged: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed when a node is selected or selection is canceled.\r\n     */\r\n    @Output() onSelectionChanged: EventEmitter<any>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() childrenFieldChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() colorFieldChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() colorizerChange: EventEmitter<{ colorCodeField?: string, colorizeGroups?: boolean, palette?: string | Array<string>, paletteExtensionMode?: string, range?: Array<number>, type?: string }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() dataSourceChange: EventEmitter<DevExpress.data.DataSource | DevExpress.data.DataSourceOptions | string | Array<any>>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() disabledChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() elementAttrChange: EventEmitter<any>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() exportChange: EventEmitter<{ backgroundColor?: string, enabled?: boolean, fileName?: string, formats?: Array<string>, margin?: number, printingEnabled?: boolean, proxyUrl?: string, svgToCanvas?: Function }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() groupChange: EventEmitter<{ border?: { color?: string, width?: number }, color?: string, headerHeight?: number, hoverEnabled?: boolean, hoverStyle?: { border?: { color?: string, width?: number }, color?: string }, label?: { font?: DevExpress.viz.Font, textOverflow?: string, visible?: boolean }, selectionStyle?: { border?: { color?: string, width?: number }, color?: string } }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() hoverEnabledChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() idFieldChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() interactWithGroupChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() labelFieldChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() layoutAlgorithmChange: EventEmitter<Function | string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() layoutDirectionChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() loadingIndicatorChange: EventEmitter<{ backgroundColor?: string, enabled?: boolean, font?: DevExpress.viz.Font, show?: boolean, text?: string }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() maxDepthChange: EventEmitter<number>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() parentFieldChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() pathModifiedChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() redrawOnResizeChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() resolveLabelOverflowChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() rtlEnabledChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() selectionModeChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() sizeChange: EventEmitter<{ height?: number, width?: number }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() themeChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() tileChange: EventEmitter<{ border?: { color?: string, width?: number }, color?: string, hoverStyle?: { border?: { color?: string, width?: number }, color?: string }, label?: { font?: DevExpress.viz.Font, textOverflow?: string, visible?: boolean, wordWrap?: string }, selectionStyle?: { border?: { color?: string, width?: number }, color?: string } }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() titleChange: EventEmitter<string | { font?: DevExpress.viz.Font, horizontalAlignment?: string, margin?: number | { bottom?: number, left?: number, right?: number, top?: number }, placeholderSize?: number, subtitle?: string | { font?: DevExpress.viz.Font, offset?: number, text?: string, textOverflow?: string, wordWrap?: string }, text?: string, textOverflow?: string, verticalAlignment?: string, wordWrap?: string }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() tooltipChange: EventEmitter<{ arrowLength?: number, border?: { color?: string, dashStyle?: string, opacity?: number, visible?: boolean, width?: number }, color?: string, container?: Element | JQuery, contentTemplate?: any, cornerRadius?: number, customizeTooltip?: Function, enabled?: boolean, font?: DevExpress.viz.Font, format?: DevExpress.ui.format | string, opacity?: number, paddingLeftRight?: number, paddingTopBottom?: number, shadow?: { blur?: number, color?: string, offsetX?: number, offsetY?: number, opacity?: number }, zIndex?: number }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() valueFieldChange: EventEmitter<string>;\r\n\r\n\r\n\r\n\r\n\r\n    constructor(elementRef: ElementRef, ngZone: NgZone, templateHost: DxTemplateHost,\r\n            private _watcherHelper: WatcherHelper,\r\n            private _idh: IterableDifferHelper, optionHost: NestedOptionHost,\r\n            transferState: TransferState,\r\n            @Inject(PLATFORM_ID) platformId: any) {\r\n\r\n        super(elementRef, ngZone, templateHost, _watcherHelper, transferState, platformId);\r\n\r\n        this._createEventEmitters([\r\n            { subscribe: 'click', emit: 'onClick' },\r\n            { subscribe: 'disposing', emit: 'onDisposing' },\r\n            { subscribe: 'drawn', emit: 'onDrawn' },\r\n            { subscribe: 'drill', emit: 'onDrill' },\r\n            { subscribe: 'exported', emit: 'onExported' },\r\n            { subscribe: 'exporting', emit: 'onExporting' },\r\n            { subscribe: 'fileSaving', emit: 'onFileSaving' },\r\n            { subscribe: 'hoverChanged', emit: 'onHoverChanged' },\r\n            { subscribe: 'incidentOccurred', emit: 'onIncidentOccurred' },\r\n            { subscribe: 'initialized', emit: 'onInitialized' },\r\n            { subscribe: 'nodesInitialized', emit: 'onNodesInitialized' },\r\n            { subscribe: 'nodesRendering', emit: 'onNodesRendering' },\r\n            { subscribe: 'optionChanged', emit: 'onOptionChanged' },\r\n            { subscribe: 'selectionChanged', emit: 'onSelectionChanged' },\r\n            { emit: 'childrenFieldChange' },\r\n            { emit: 'colorFieldChange' },\r\n            { emit: 'colorizerChange' },\r\n            { emit: 'dataSourceChange' },\r\n            { emit: 'disabledChange' },\r\n            { emit: 'elementAttrChange' },\r\n            { emit: 'exportChange' },\r\n            { emit: 'groupChange' },\r\n            { emit: 'hoverEnabledChange' },\r\n            { emit: 'idFieldChange' },\r\n            { emit: 'interactWithGroupChange' },\r\n            { emit: 'labelFieldChange' },\r\n            { emit: 'layoutAlgorithmChange' },\r\n            { emit: 'layoutDirectionChange' },\r\n            { emit: 'loadingIndicatorChange' },\r\n            { emit: 'maxDepthChange' },\r\n            { emit: 'parentFieldChange' },\r\n            { emit: 'pathModifiedChange' },\r\n            { emit: 'redrawOnResizeChange' },\r\n            { emit: 'resolveLabelOverflowChange' },\r\n            { emit: 'rtlEnabledChange' },\r\n            { emit: 'selectionModeChange' },\r\n            { emit: 'sizeChange' },\r\n            { emit: 'themeChange' },\r\n            { emit: 'tileChange' },\r\n            { emit: 'titleChange' },\r\n            { emit: 'tooltipChange' },\r\n            { emit: 'valueFieldChange' }\r\n        ]);\r\n\r\n        this._idh.setHost(this);\r\n        optionHost.setHost(this);\r\n    }\r\n\r\n    protected _createInstance(element, options) {\r\n        return new DxTreeMap(element, options);\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this._destroyWidget();\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        super.ngOnChanges(changes);\r\n        this.setupChanges('dataSource', changes);\r\n    }\r\n\r\n    setupChanges(prop: string, changes: SimpleChanges) {\r\n        if (!(prop in this._optionsToUpdate)) {\r\n            this._idh.setup(prop, changes);\r\n        }\r\n    }\r\n\r\n    ngDoCheck() {\r\n        this._idh.doCheck('dataSource');\r\n        this._watcherHelper.checkWatchers();\r\n        super.ngDoCheck();\r\n        super.clearChangedOptions();\r\n    }\r\n\r\n    _setOption(name: string, value: any) {\r\n        let isSetup = this._idh.setupSingle(name, value);\r\n        let isChanged = this._idh.getChanges(name, value) !== null;\r\n\r\n        if (isSetup || isChanged) {\r\n            super._setOption(name, value);\r\n        }\r\n    }\r\n\r\n}\r\n\r\n@NgModule({\r\n  imports: [\r\n    DxoColorizerModule,\r\n    DxoExportModule,\r\n    DxoGroupModule,\r\n    DxoBorderModule,\r\n    DxoHoverStyleModule,\r\n    DxoLabelModule,\r\n    DxoFontModule,\r\n    DxoSelectionStyleModule,\r\n    DxoLoadingIndicatorModule,\r\n    DxoSizeModule,\r\n    DxoTileModule,\r\n    DxoTitleModule,\r\n    DxoMarginModule,\r\n    DxoSubtitleModule,\r\n    DxoTooltipModule,\r\n    DxoFormatModule,\r\n    DxoShadowModule,\r\n    DxIntegrationModule,\r\n    DxTemplateModule,\r\n    BrowserTransferStateModule\r\n  ],\r\n  declarations: [\r\n    DxTreeMapComponent\r\n  ],\r\n  exports: [\r\n    DxTreeMapComponent,\r\n    DxoColorizerModule,\r\n    DxoExportModule,\r\n    DxoGroupModule,\r\n    DxoBorderModule,\r\n    DxoHoverStyleModule,\r\n    DxoLabelModule,\r\n    DxoFontModule,\r\n    DxoSelectionStyleModule,\r\n    DxoLoadingIndicatorModule,\r\n    DxoSizeModule,\r\n    DxoTileModule,\r\n    DxoTitleModule,\r\n    DxoMarginModule,\r\n    DxoSubtitleModule,\r\n    DxoTooltipModule,\r\n    DxoFormatModule,\r\n    DxoShadowModule,\r\n    DxTemplateModule\r\n  ]\r\n})\r\nexport class DxTreeMapModule { }\r\n"]}